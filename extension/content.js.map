{"version":3,"file":"content.js","mappings":";;;;;AAAA,MAAMA,gBAAgB,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,aAAa,EAAE;EAExB;EAEAA,aAAaA,CAAA,EAAE;IACXC,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW,CAAE,OAAOC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,KAAK;MACvE,IAAIF,OAAO,CAACG,MAAM,IAAI,QAAQ,EAAE,IAAI,CAACC,eAAe,EAAE;MACtDC,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;IACxB,CAAC,CAAC;EAEN;EAEAI,eAAeA,CAAA,EAAG;IACd,MAAMG,MAAM,GAAG,qbAAqb;IAEpc,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;IAChDF,KAAK,CAACG,KAAK,GAAGC,MAAM;IACpBH,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC,CAACG,KAAK,EAAE;EACrD;AACJ;AAGA,MAAMC,aAAa,GAAG,IAAIrB,gBAAgB,EAAE,C","sources":["webpack://empty-project/./src/index.js"],"sourcesContent":["class ChatGPTExtension {\n    constructor() {\n        this.handleRequest()\n\n    }\n\n    handleRequest(){\n        chrome.runtime.onMessage.addListener( async (request, sender, response) => {\n            if (request.action == \"PROMPT\") this.promptToChatGPT()\n            console.log(request)\n        })\n\n    }\n\n    promptToChatGPT() {\n        const propmt = \"From now on, if you need to write a mathematical expression, use katex notation and follow these rules:\\n1. If it is a block equation, display it in a single P element and wrap it with double dollar signs like this:\\n\\n$$e=mc^{2}$$\\n\\n2. If it is an inline equation, use the two backslash and parenthesis notation of katex, like this: \\\\(e^{i \\\\\\pi}-1=0\\\\).\\n\\nCan you give me an example of a block equation to see that you understand?\"\n\n        const input = document.querySelector(\"textarea\")\n        input.value = prompt\n        document.querySelector(\"textarea~button\").click()\n    }\n}\n\n\nconst CGPTExtension = new ChatGPTExtension()\n"],"names":["ChatGPTExtension","constructor","handleRequest","chrome","runtime","onMessage","addListener","request","sender","response","action","promptToChatGPT","console","log","propmt","input","document","querySelector","value","prompt","click","CGPTExtension"],"sourceRoot":""}